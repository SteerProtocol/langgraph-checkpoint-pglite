export declare const SELECT_SQL = "\nselect\n    thread_id,\n    checkpoint,\n    checkpoint_ns,\n    checkpoint_id,\n    parent_checkpoint_id,\n    metadata,\n    (\n        select array_agg(array[bl.channel::bytea, bl.type::bytea, bl.blob])\n        from jsonb_each_text(checkpoint -> 'channel_versions')\n        inner join checkpoint_blobs bl\n            on bl.thread_id = checkpoints.thread_id\n            and bl.checkpoint_ns = checkpoints.checkpoint_ns\n            and bl.channel = jsonb_each_text.key\n            and bl.version = jsonb_each_text.value\n    ) as channel_values,\n    (\n        select\n        array_agg(array[cw.task_id::text::bytea, cw.channel::bytea, cw.type::bytea, cw.blob] order by cw.task_id, cw.idx)\n        from checkpoint_writes cw\n        where cw.thread_id = checkpoints.thread_id\n            and cw.checkpoint_ns = checkpoints.checkpoint_ns\n            and cw.checkpoint_id = checkpoints.checkpoint_id\n    ) as pending_writes,\n    (\n        select array_agg(array[cw.type::bytea, cw.blob] order by cw.idx)\n        from checkpoint_writes cw\n        where cw.thread_id = checkpoints.thread_id\n            and cw.checkpoint_ns = checkpoints.checkpoint_ns\n            and cw.checkpoint_id = checkpoints.parent_checkpoint_id\n            and cw.channel = '__pregel_tasks'\n    ) as pending_sends\nfrom checkpoints ";
export declare const UPSERT_CHECKPOINT_BLOBS_SQL = "\n    INSERT INTO checkpoint_blobs (thread_id, checkpoint_ns, channel, version, type, blob)\n    VALUES ($1, $2, $3, $4, $5, $6)\n    ON CONFLICT (thread_id, checkpoint_ns, channel, version) DO NOTHING\n";
export declare const UPSERT_CHECKPOINTS_SQL = "\n    INSERT INTO checkpoints (thread_id, checkpoint_ns, checkpoint_id, parent_checkpoint_id, checkpoint, metadata)\n    VALUES ($1, $2, $3, $4, $5, $6)\n    ON CONFLICT (thread_id, checkpoint_ns, checkpoint_id)\n    DO UPDATE SET\n        checkpoint = EXCLUDED.checkpoint,\n        metadata = EXCLUDED.metadata;\n";
export declare const UPSERT_CHECKPOINT_WRITES_SQL = "\n    INSERT INTO checkpoint_writes (thread_id, checkpoint_ns, checkpoint_id, task_id, idx, channel, type, blob)\n    VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n    ON CONFLICT (thread_id, checkpoint_ns, checkpoint_id, task_id, idx) DO UPDATE SET\n        channel = EXCLUDED.channel,\n        type = EXCLUDED.type,\n        blob = EXCLUDED.blob;\n";
export declare const INSERT_CHECKPOINT_WRITES_SQL = "\n    INSERT INTO checkpoint_writes (thread_id, checkpoint_ns, checkpoint_id, task_id, idx, channel, type, blob)\n    VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n    ON CONFLICT (thread_id, checkpoint_ns, checkpoint_id, task_id, idx) DO NOTHING\n";
export declare const DELETE_CHECKPOINT_WRITES_SQL = "\n    DELETE FROM checkpoint_writes\n    WHERE thread_id = $1\n    AND checkpoint_ns = $2\n    AND checkpoint_id = $3\n";
export declare const DELETE_CHECKPOINT_BLOBS_SQL = "\n    DELETE FROM checkpoint_blobs\n    WHERE thread_id = $1\n    AND checkpoint_ns = $2\n    AND NOT EXISTS (\n        SELECT 1 FROM checkpoints c\n        WHERE c.thread_id = checkpoint_blobs.thread_id\n        AND c.checkpoint_ns = checkpoint_blobs.checkpoint_ns\n        AND c.checkpoint_id != $3\n        AND (c.checkpoint->>'channel_versions')::jsonb @> jsonb_build_object(channel, version)\n    )\n";
export declare const DELETE_CHECKPOINT_SQL = "\n    DELETE FROM checkpoints\n    WHERE thread_id = $1\n    AND checkpoint_ns = $2\n    AND checkpoint_id = $3\n";
export declare const DELETE_THREAD_WRITES_SQL = "\n    DELETE FROM checkpoint_writes\n    WHERE thread_id = $1\n    AND checkpoint_ns = $2\n";
export declare const DELETE_THREAD_BLOBS_SQL = "\n    DELETE FROM checkpoint_blobs\n    WHERE thread_id = $1\n    AND checkpoint_ns = $2\n";
export declare const DELETE_THREAD_CHECKPOINTS_SQL = "\n    DELETE FROM checkpoints\n    WHERE thread_id = $1\n    AND checkpoint_ns = $2\n";
